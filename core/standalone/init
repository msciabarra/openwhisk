#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
if ! test -e /var/run/docker.sock
then echo "Please launch this image with the option -v //var/run/docker.sock:/var/run/docker.sock"
     exit 1
fi
DEFAULT_AUTH="23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP"
AUTH=${CONFIG_FORCE_whisk_users_guest:-$DEFAULT_AUTH}
wsk property set --apihost "http://localhost:3233" --auth "$AUTH"
echo "stopped" >/var/run/state
# launch traefik
(
 while [ 1 ]
 do /sbin/traefik -c /etc/traefik.toml
 done
)&
# wait for readyness then deploy actions
(
  until wsk action list 2>/dev/null >/dev/null
  do sleep 5 ; echo "starting" >/var/run/state
  done
  wsk action update checkReady <(echo 'function main(){return {"ready":true}}') --kind nodejs:10
  until wsk action invoke checkReady -r 2>/dev/null | grep 'ready'
  do sleep 1 ; echo "initializing" >/var/run/state
  done
  wsk action delete checkReady >/dev/null
  if test -f /app/actions/manifest.yaml
  then echo "deploying" >/var/run/state
       cd /app/actions
       wsk project deploy
  fi
  echo "ready" >/var/run/state
)&
DOCKER_NETWORK=$(docker inspect $(hostname) -f "{{json .NetworkSettings.Networks}}" | jq -r 'keys[0]')
JVM_ARGS="-Dconfig.override_with_env_vars=true\
 -Dwhisk.standalone.docker.network=${DOCKER_NETWORK:-bridge}\
 -Dwhisk.standalone.host.name=localhost\
 -Dwhisk.standalone.host.ip=$(hostname -i)\
 -Dwhisk.standalone.proxy.port=3280\
 -Dwhisk.standalone.proxy.url=http://localhost:3280 $JVM_EXTRA_ARGS"
set -x
java $JVM_ARGS -jar openwhisk-standalone.jar --no-browser "$@"
